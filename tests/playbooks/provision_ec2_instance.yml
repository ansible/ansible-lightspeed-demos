---
- name: EC2 Cloud Operations
  hosts: localhost
  connection: local
  gather_facts: false

  module_defaults:
    group/aws:
      region: us-east-1

  vars:
    ec2_instance:
      name: instance-lightspeed-01
      key_name: lightspeed-keypair
      image_id: ami-016eb5d644c333ccb # RHEL 9 us-east-1
      network:
        assign_public_ip: true
      tags:
        function: demo-lightspeed
      security_group: secgroup-lightspeed

  tasks:
    # Gather info from subnet called subnet-lightspeed & create vpc_subnet_id var
    - name: Gather info from subnet called subnet-lightspeed
      amazon.aws.ec2_vpc_subnet_info:
        filters:
          tag:Name: subnet-lightspeed
      register: subnet_info

    - name: Create vpc_subnet_id var
      ansible.builtin.set_fact:
        vpc_subnet_id: "{{ subnet_info.subnets[0].id }}"

    - name: Provision t3.small instance using ec2_instance var
      amazon.aws.ec2_instance:
        name: "{{ ec2_instance.name }}"
        key_name: "{{ ec2_instance.key_name }}"
        image_id: "{{ ec2_instance.image_id }}"
        network: "{{ ec2_instance.network }}"
        instance_type: t3.small
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        tags: "{{ ec2_instance.tags }}"
        security_group: "{{ ec2_instance.security_group }}"
        wait: true
        wait_timeout: 600
      register: ec2_instance_info

    # Create var from public_ip_address & print it out
    - name: Create var from public_ip_address
      ansible.builtin.set_fact:
        public_ip_address: "{{ ec2_instance_info.instances[0].public_ip_address }}"

    - name: Print it out
      ansible.builtin.debug:
        msg: "{{ public_ip_address }}"
